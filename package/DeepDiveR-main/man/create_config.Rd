% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_config.R
\name{create_config}
\alias{create_config}
\title{Create DeepDive config object and file}
\usage{
create_config(
  simulate = TRUE,
  model_training = TRUE,
  empirical_predictions = TRUE,
  autotune = TRUE,
  present_diversity = NA,
  path_wd = NULL,
  bins = NULL,
  sim_name = NULL,
  n_areas = NULL,
  simulations_file = "simulations",
  add_test = TRUE,
  models_file = "trained_models",
  feature_file = NULL,
  label_file = NULL,
  empirical_input_file = NULL,
  output_file = NULL
)
}
\arguments{
\item{simulate}{A TRUE/FALSE statement that switches on and off generation of simulated datasets used in model training and testing.}

\item{model_training}{A TRUE/FALSE statement that switches on and off the training of new RNN models.}

\item{empirical_predictions}{A TRUE/FALSE statement that switches on and off empirical analyses.}

\item{autotune}{When TRUE a new config will be saved with adjusted parameters used for analyses that reflect the empirical data.}

\item{path_wd}{Working directory where files for analyses can be found.}

\item{bins}{A vector of bin boundary ages.}

\item{sim_name}{A string that identifies a set of simulations.}

\item{n_areas}{An integer number of discrete sampling regions e.g. continents, basins.}

\item{simulations_file}{File where simulations will be saved.}

\item{add_test}{A TRUE/FALSE statement, when true a test set with the same settings as the training set are generated.}

\item{models_file}{File where trained models can be saved and retrieved.}

\item{feature_file}{File name for training features.}

\item{label_file}{File name for training labels.}

\item{empirical_input_file}{File name where empirical data in the input format for use in deepdive will be saved.}

\item{output_file}{File where outputs will be saved.}

\item{present_diverstiy}{Number of extant taxa which predictions will be conditioned on. When NA no conditioning occurs.}
}
\value{
Creates configuration file with settings to launch DeepDive.
}
\description{
'create_config()' generates a config object with settings needed to launch
DeepDive scripts in python. Uses ConfigParser (Hoefling, 2017) formatting.
}
\examples{
config <- create_config(wd = paste0(getwd()), bins = time_bins, 
sim_name = "test", n_areas = length(unique(your_data$Area)), 
simulations_file = paste0(path_dat, "simulations"), add_test = T)
}
